# Colors
RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

BG_START='\033[05;44;33m'
BG_END='\033[0m'

WHITE='\033[01;37m'

# p_menu_comandos_generales
ejecutar_comando() {
  clear
  echo "${BG_START} $2 ${BG_END}"
  sleep 1
  $1
  sleep 2
  clear
}

menu_comandos_generales() {
  clear
  while true
  do
    echo "${RED}Menú Comandos Generales ${LIGHTGRAY}"
    echo "1. VISUALIZAR HORA DEL SISTEMA"
    echo "2. PATH O RUTA ACTUAL"
    echo "3. CAMBIO DE PASSWORD"
    echo "4. MOSTRAR DISCO LIBRE"
    echo "5. MOSTRAR DISCO UTILIZADO"
    echo "6. VISUALIZAR PROCESOS ACTIVOS"
    echo "7. REGRESAR"
    echo "${YELLOW}Seleccione la opción deseada: ${CYAN}"
    read opcion
    case $opcion in
      1) ejecutar_comando date 'La hora actual es:';;
      2) ejecutar_comando pwd 'La ruta actual es:';;
      3) ejecutar_comando passwd 'Cambiar la contraseña';;
      4) ejecutar_comando df 'El disco libre';;
      5) ejecutar_comando du 'El disco utilizado';;
      6) ejecutar_comando ps 'Los procesos activos';;
      7) menu_principal;;
      *) mensaje_error 7;;
    esac
  done
}

# p_menu_usuarios
nombre_usuarios_conectados() {
  clear
  echo "${BG_START}Los usuarios conectados son:${BG_END}"
  who > usuarios_conectados
  cut -c 1-9  usuarios_conectados
  rm usuarios_conectados
}

usuarios_conectados() {
  nombre_usuarios_conectados
  sleep 4
  clear
}

numero_de_usuarios_conectados() {
  clear
  echo "${BG_START}El número de usuarios conectados: ${BG_END}"
  who | wc -l > usuarios_conectados
  tr -d " \t" < usuarios_conectados > numero_usuarios_conectados
  cat numero_usuarios_conectados
  rm usuarios_conectados
  rm numero_usuarios_conectados
  sleep 4
  clear
}

enviar_mensaje_a_usuario() {
  nombre_usuarios_conectados
  echo "${YELLOW}¿A qué usuario desea enviarle el mensaje? Luego Presione Enter${CYAN}"
  read usuario

  echo "${YELLOW}¿Que mensaje desea enviarle a $usuario? Luego Presione Enter${CYAN}"
  read mensaje

  echo "Enviando: '$mensaje' al usuario: $usuario"
  echo $mensaje | write $usuario

  sleep 4
  clear
}

usuario_conectado() {
  echo "${BG_START}Verificando si $usuario esta conectado... ${BG_END}"
  who | grep -w "$1" > filtro_usuario

  if test -s filtro_usuario
  then
    echo "${CYAN} $usuario si esta conectado"
  else
    echo "${CYAN} $usuario no esta conectado"
  fi

  rm filtro_usuario
}

verificar_usuario_conectado() {
  clear
  echo "${YELLOW}¿Qué usuario desea verificar si esta conectado? Luego Presione Enter${CYAN}"
  read usuario
  clear

  usuario_conectado $usuario

  sleep 4
  clear
}


menu_usuarios() {
  clear
  while true
  do
    echo "${RED}Menu Varios Usuarios ${LIGHTGRAY}"
    echo "1. MOSTRAR NOMBRE DE USUARIOS CONECTADOS"
    echo "2. MOSTRAR NUMERO DE USUARIOS CONECTADOS"
    echo "3. AVERIGUAR SI UN USUARIO ESTA CONECTADO"
    echo "4. ENVIAR MENSAJE A UN USUARIO"
    echo "5. REGRESAR"
    echo "${YELLOW} Seleccione la opción deseada. Luego Presione Enter${CYAN}"
    read opcion
    case $opcion in
      1) usuarios_conectados;;
      2) numero_de_usuarios_conectados;;
      3) verificar_usuario_conectado;;
      4) enviar_mensaje_a_usuario;;
      5) menu_principal;;
      *) mensaje_error 5;;
    esac
  done
}


# p_menu_sistema_archivos
# p_sistema_de_archivos
seleccion_de_permisos() {
  clear
  echo "\033[05;44;33m PERMISOS PARA EL ARCHIVO $1 \033[0m"
  echo "Primero se modificaran los permisos para el usuario, luego para el grupo, por ultimo otros usuarios"

  sleep 5
  clear

  permisos $1 usuario 1
  permisos $1 grupo 2
  permisos $1 otros 3

  echo "${BG_START} Permisos del archivo modificados con exito ${BG_END}"
  sleep 2
  clear
}

permisos() {
  clear
  initial="$(echo $2 | head -c 1)"
  while true
  do
    echo "${WHITE}$3) Permisos para el ${BG_START} $2 ${BG_END}"
    echo "${YELLOW}¿Que permisos desea darle? ${CYAN}"
    echo "1) Solo Lectura"
    echo "2) Solo Ejecucion"
    echo "3) Solo Escritura"
    echo "4) Lectura, Escritura"
    echo "5) Lectura, Ejecucion"
    echo "6) Escritura, Ejecucion"
    echo "7) Lectura, Escritura, Ejecucion"
    echo "${YELLOW}Seleccione la opción deseada. Luego Presione Enter ${CYAN}"
    read opcion
    case $opcion in
      1) editar_permisos $initial 'r' 'wx' $1;;
      2) editar_permisos $initial 'x' 'rw' $1;;
      3) editar_permisos $initial 'w' 'rx' $1;;
      4) editar_permisos $initial 'rw' 'x' $1;;
      5) editar_permisos $initial 'rx' 'w' $1;;
      6) editar_permisos $initial 'wx' 'r' $1;;
      7) editar_permisos $initial 'rxw' '' $1;;
      *) mensaje_error 7;;
    esac
  done
}

editar_permisos() {
  clear
  chmod $1+$2-$3 $4

  echo "${WHITE} Permisos del archivo: $4 modificados con exito ${GREEN}"
  ls -l | grep -w $4

  sleep 4
  clear
  break
}

copiar_archivo() {
  clear
  ls -p | grep -v /
  echo "${YELLOW}Ingrese el nombre del archivo a copiar. Luego Presione Enter ${CYAN}"
  read nombre_archivo_1

  if test -f $nombre_archivo_1
  then
    clear
    echo "${YELLOW}¿Que nombre le desea poner al archivo copiado de $nombre_archivo_1? Luego Presione Enter${CYAN}"
    echo "${RED}NOTA: Si el nombre del archivo es una carpeta ya existente el archivo $nombre_archivo_1 se creara dentro de la carpeta ${CYAN}"
    read nombre_archivo_2
    cp $nombre_archivo_1 $nombre_archivo_2
    echo "${BG_START} El archivo $nombre_archivo_1 ha sido copiado en $nombre_archivo_2${BG_END}"
    ls -p | grep -v /
  else
    clear
    echo "${RED}$nombre_archivo_1 no existe${CYAN}"
    sleep 2
    copiar_archivo
  fi
  sleep 4
  clear
}

renombrar_archivo() {
  clear
  ls -p | grep -v /
  echo "${YELLOW}Ingrese el nombre del archivo que desear renombrar. Luego Presione Enter ${CYAN}"
  read nombre_archivo_1

  if test -f $nombre_archivo_1
  then
    clear
    echo "${YELLOW}¿Que nombre le desea poner al archivo? Luego Presione Enter ${CYAN}"
    read nombre_archivo_2
    mv $nombre_archivo_1 $nombre_archivo_2
    echo "${BG_START}El archivo $nombre_archivo_1 ha sido renombrado a $nombre_archivo_2${BG_END}"
    ls -p | grep -v /
  else
    clear
    echo "${RED}$nombre_archivo_1 no existe"
    sleep 2
    renombrar_archivo
  fi
  sleep 4
  clear
}

visualizar_archivo() {
  clear
  ls -p | grep -v /
  echo "${YELLOW}Ingrese el nombre del archivo a visualizar. Luego Presione Enter ${CYAN}"
  read nombre_archivo

  if test -f $nombre_archivo
  then
    clear
    echo "${RED} Presione la letra 'q' para dejar de visualizar el archivo ${WHITE}"
    sleep 2
    clear
    more $nombre_archivo
  else
    clear
    echo "$nombre_archivo no existe"
    sleep 2
    visualizar_archivo
  fi
  clear
}

borrar_archivo() {
  clear
  ls -p | grep -v /
  echo "${YELLOW} Ingrese el nombre del archivo a borrar. Luego Presione Enter ${CYAN}"
  read nombre_archivo

  cancelar_operacion $nombre_archivo

  if test -f $nombre_archivo -a -w $nombre_archivo
  then
    clear
    rm $nombre_archivo
    echo "${BG_START}El archivo $nombre_archivo ha sido elimnado con exito${BG_END} ${CYAN}"
    ls -p | grep -v /
  else
    clear
    echo "${RED}$nombre_archivo no existe o no se puede eliminar${CYAN}"
    sleep 2
    borrar_archivo
  fi
  sleep 4
  clear
}

modificar_permisos_archivo() {
  clear
  ls -p | grep -v /
  echo "${YELLOW}Ingrese el nombre del archivo que desea modificar los permisos. Luego Presione Enter ${CYAN}"
  read nombre_archivo

  if test -f $nombre_archivo
  then
    seleccion_de_permisos $nombre_archivo
  else
    clear
    echo "${RED}$nombre_archivo no existe${CYAN}"
    sleep 2
    modificar_permisos_archivo
  fi
  sleep 2
  clear
}

# p_sistema_de_directorios
crear_directorio() {
  clear
  echo "${YELLOW}Ingrese el nombre del directorio a crear. Luego Presione Enter ${CYAN}"
  read nombre_directorio

  if test -d $nombre_directorio
  then
    clear
    echo "$nombre_directorio ya existe"
    sleep 2
    crear_directorio
  else
    clear
    mkdir $nombre_directorio
    echo "${BG_START}Directorio: $nombre_directorio creado con exito${BG_END}"
    ls
  fi
  sleep 4
  clear
}

borrar_todo() {
  clear
  rm -fr $1
  echo "${BG_START} Directorio $1 borrado con exito ${BG_END}"
  ls
  clear
  break
}

verifcar_eliminacion_de_directorio() {
  while true
  do
    echo "${RED}IMPORTANTE"
    echo "Borrando el directorio $nombre_directorio, se borraran ademas los archivos dentro de esta carpeta ..."
    echo "¿Esta seguro?. Presione: ${CYAN}"
    echo "1) SI ESTOY SEGURO"
    echo "2) CANCELAR OPERACION ${YELLOW}"
    read opcion
    case $opcion in
      1) borrar_todo $nombre_directorio;;
      2) menu_sistema_de_archivos;;
      *) mensaje_error 2;;
    esac
  done
}

borrar_directorio() {
  clear
  ls
  echo "${YELLOW}Ingrese el nombre del directorio a borrar. Luego Presione Enter ${CYAN}"
  read nombre_directorio
  clear
  if test -d $nombre_directorio -a -w $nombre_directorio
  then
    verifcar_eliminacion_de_directorio $nombre_directorio
  else
    clear
    echo "${RED}$nombre_directorio no existe o no se puede eliminar"
    sleep 2
    borrar_directorio
  fi
  sleep 4
  clear
}

menu_sistema_de_archivos() {
  clear
  while true
  do
    echo "${RED}Menú Sistema de archivos ${LIGHTGRAY}"
    echo "1. CREAR DIRECTORIO"
    echo "2. COPIAR ARCHIVOS"
    echo "3. MODIFICAR PERMISOS A UN ARCHIVO"
    echo "4. VISUALIZAR EL CONTENIDO DE UN ARCHIVO"
    echo "5. BORRAR UN ARCHIVO"
    echo "6. CAMBIAR EL NOMBRE DE UN ARCHIVO"
    echo "7. BORRAR UN DIRECTORIO"
    echo "8. REGRESAR"
    echo "${YELLOW}Seleccione la opción deseada: ${CYAN}"
    read opcion
    case $opcion in
      1) crear_directorio;;
      2) copiar_archivo;;
      3) modificar_permisos_archivo;;
      4) visualizar_archivo;;
      5) borrar_archivo;;
      6) renombrar_archivo;;
      7) borrar_directorio;;
      8) menu_principal;;
      *) mensaje_error 8;;
    esac
  done
}

mensaje_error() {
  clear
  echo "${RED}Error el valor debe estar entre 1 - $1"
  sleep 2
  clear
}

cancelar_operacion() {
  if [ $1 == "q" ]; then
    echo "Operacion Cancelada...."
    sleep 2
    clear
    break
  fi
}

mensaje_despedida() {
  clear
  nombre="$(whoami)"
  echo "${WHITE}Gracias \033[05;44;33m$nombre\033[0m por su visita"
  sleep 2
  exit
  chmod a+w p_*
  clear
}

menu_principal() {
  clear
  while true
  do
    echo "${RED}MENU PRINCIPAL ${LIGHTGRAY}"
    echo "1. COMANDOS GENERALES"
    echo "2. USUARIOS"
    echo "3. SISTEMA DE ARCHIVOS"
    echo "4. TERMINAR"
    echo "${YELLOW}Seleccione la opción deseada. Luego Presione Enter ${CYAN}"
    read opcion
    case $opcion in
      1) menu_comandos_generales;;
      2) menu_usuarios;;
      3) menu_sistema_de_archivos;;
      4) mensaje_despedida;;
      *) mensaje_error 4;;
    esac
  done
}

chmod a-w+rx p_*

menu_principal
